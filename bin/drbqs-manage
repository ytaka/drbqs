#!/usr/bin/env ruby

require 'drbqs'
require 'optparse'

Version = '0.0.1'

help_message =<<HELP
Usage: #{File.basename(__FILE__)} <command> <uri>
Manage DRbQS server by sending messages.
<command> is 'exit-signal'.

HELP

begin
  OptionParser.new(help_message) do |opt|
    opt.on('--debug', 'Set $DEBUG true.') do |v|
      $DEBUG = true
    end
    opt.parse!(ARGV)
  end
rescue OptionParser::InvalidOption
  $stderr.print <<MES
error: Invalid Option
#{help_message}
MES
  exit(2)
rescue OptionParser::InvalidArgument
  $stderr.print <<MES
error: Invalid Argument
#{help_message}
MES
  exit(2)
end

def check_argument_size(n, check_method)
  unless ARGV.size.__send__(check_method, n)
    raise "Invalid arguments number. Please refer '#{File.basename(__FILE__)} -h'."
  end
end

command = ARGV[0]
manage = DRbQS::Manage.new

case command
when 'exit-signal'
  check_argument_size(2, :==)
  uri = ARGV[1]
  manage.send_exit_signal(uri)
when 'initialize'
  check_argument_size(1, :==)
  manage.create_config
  raise "Invalid command: #{command}"
end
